{"version":3,"sources":["services/contacts.js","components/Form.js","components/Person.js","components/People.js","components/Search.js","components/Message.js","App.js","index.js"],"names":["url","axios","get","then","res","data","person","post","id","delete","put","Form","formHandler","inputHandler","name","phone","onSubmit","onChange","value","type","Person","People","persons","deleteHandler","map","key","onClick","Search","filterHandler","Message","message","className","text","App","useState","setPersons","newName","setNewName","newPhone","setNewPhone","filteredList","setFilteredList","setMessage","useEffect","contactServices","e","target","filter","toLowerCase","includes","preventDefault","exists","find","window","confirm","newPerson","setTimeout","catch","error","concat","targetName","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ac527d9.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst url = 'https://sheltered-earth-74112.herokuapp.com/api/persons';\r\n\r\nconst getAll = () => {\r\n  return axios.get(url).then((res) => res.data);\r\n};\r\n\r\nconst addPerson = (person) => {\r\n  return axios.post(url, person).then((res) => res.data);\r\n};\r\n\r\nconst deletePerson = (id) => {\r\n  return axios.delete(`${url}/${id}`);\r\n};\r\n\r\nconst updatePerson = (id, person) => {\r\n  return axios.put(`${url}/${id}`, person).then((res) => res.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  addPerson,\r\n  deletePerson,\r\n  updatePerson,\r\n};\r\n","import React from 'react';\r\n\r\nconst Form = ({ formHandler, inputHandler, name, phone }) => {\r\n  return (\r\n    <div>\r\n      <h3>Add New Number</h3>\r\n      <form onSubmit={formHandler}>\r\n        <div>\r\n          Name: <input name=\"NewName\" onChange={inputHandler} value={name} />\r\n        </div>\r\n        <div>\r\n          Phone: <input name=\"NewPhone\" onChange={inputHandler} value={phone} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\r\n\r\nconst Person = ({ person }) => {\r\n  return (\r\n    <div>\r\n      <p>\r\n        Name: {person.name} - Phone:{person.phone}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","import React from 'react';\r\nimport Person from './Person';\r\n\r\nconst People = ({ persons, deleteHandler }) => {\r\n  return (\r\n    <div>\r\n      <h3>Numbers</h3>\r\n      {persons.map((person) => (\r\n        <div key={person.name}>\r\n          <Person person={person} />\r\n          <button value={person.id} onClick={deleteHandler}>\r\n            delete\r\n          </button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default People;\r\n","import React from 'react';\r\n\r\nconst Search = ({ filterHandler }) => {\r\n  return (\r\n    <div>\r\n      Search: <input type=\"text\" name=\"filter\" onChange={filterHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react';\r\n\r\nconst Message = ({ message }) => {\r\n  if (!message) return null;\r\n\r\n  return <div className={`${message.type} message`}>{message.text}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React, { useState, useEffect } from 'react';\r\nimport contactServices from './services/contacts';\r\nimport Form from './components/Form';\r\nimport People from './components/People';\r\nimport Search from './components/Search';\r\nimport Message from './components/Message';\r\nimport './index.css';\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState('');\r\n  const [newPhone, setNewPhone] = useState('');\r\n  const [filteredList, setFilteredList] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    contactServices.getAll().then((persons) => setPersons(persons));\r\n  }, [message]);\r\n\r\n  const deleteHandler = (e) => {\r\n    const targetName = persons.find((person) => person.id == e.target.value);\r\n    if (window.confirm(`Delete ${targetName.name} ?`)) {\r\n      contactServices\r\n        .deletePerson(e.target.value)\r\n        .then(() => {})\r\n        .catch((error) => {\r\n          setMessage({\r\n            text: `${targetName.name} has already been deleted`,\r\n            type: 'error',\r\n          });\r\n          setTimeout(() => {\r\n            setMessage('');\r\n          }, 3000);\r\n        });\r\n      setPersons(persons.filter((person) => person.id != e.target.value));\r\n      if (filteredList)\r\n        setFilteredList(\r\n          filteredList.filter((person) => person.id != e.target.value)\r\n        );\r\n      setMessage({\r\n        text: `${targetName.name} deleted successfully`,\r\n        type: 'success',\r\n      });\r\n      setTimeout(() => {\r\n        setMessage('');\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  const inputHandler = (e) => {\r\n    if (e.target.name === 'NewName') setNewName(e.target.value);\r\n    else if (e.target.name === 'NewPhone') setNewPhone(e.target.value);\r\n  };\r\n\r\n  const filterHandler = (e) => {\r\n    if (e.target.value === '') setFilteredList(null);\r\n    else {\r\n      setFilteredList(\r\n        persons.filter((person) =>\r\n          person.name.toLowerCase().includes(e.target.value.toLowerCase())\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  const formHandler = (e) => {\r\n    e.preventDefault();\r\n    setNewName('');\r\n    setNewPhone('');\r\n    const exists = persons.find((person) => person.name === newName);\r\n    if (exists) {\r\n      if (\r\n        window.confirm(`${newName} already exists in the phonebook would u like to \r\n      replace the old number with new one ?`)\r\n      ) {\r\n        contactServices\r\n          .updatePerson(exists.id, {\r\n            name: newName,\r\n            phone: newPhone,\r\n          })\r\n          .then((newPerson) => {\r\n            setPersons(\r\n              persons.map((person) =>\r\n                person.id === newPerson.id ? newPerson : person\r\n              )\r\n            );\r\n            if (filteredList)\r\n              setFilteredList(\r\n                filteredList.map((person) =>\r\n                  person.id === newPerson.id ? newPerson : person\r\n                )\r\n              );\r\n            setMessage({\r\n              text: `${newName} phone Changed successfully`,\r\n              type: 'success',\r\n            });\r\n            setTimeout(() => {\r\n              setMessage('');\r\n            }, 3000);\r\n          })\r\n          .catch((error) => {\r\n            setMessage({\r\n              text: `${newName} has already been deleted`,\r\n              type: 'error',\r\n            });\r\n            setTimeout(() => {\r\n              setMessage('');\r\n            }, 3000);\r\n          });\r\n      }\r\n    } else {\r\n      contactServices\r\n        .addPerson({ name: newName, phone: newPhone })\r\n        .then((person) =>\r\n          setPersons(persons.concat({ name: newName, phone: newPhone }))\r\n        );\r\n      setMessage({\r\n        text: `${newName} added successfully`,\r\n        type: 'success',\r\n      });\r\n      setTimeout(() => {\r\n        setMessage('');\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <Message message={message} />\r\n      <Search filterHandler={filterHandler} />\r\n      <Form\r\n        formHandler={formHandler}\r\n        inputHandler={inputHandler}\r\n        name={newName}\r\n        phone={newPhone}\r\n      />\r\n      <People\r\n        persons={filteredList ? filteredList : persons}\r\n        deleteHandler={deleteHandler}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}